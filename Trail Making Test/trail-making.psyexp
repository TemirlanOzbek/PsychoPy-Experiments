<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.2.4">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="use prefs" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="True" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="True" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1536, 864]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW', 'Condition': '35', 'Score': '34', 'marker': '33'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[-.67,-.67,-.67]" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="warning" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="trail-making" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="setup">
      <RoutineSettingsComponent name="setup" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="setup" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="JSCode" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="white = [.9, .9, .9]&amp;#10;green = [-.5, .5, -.5]" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="document.documentElement.style.cursor = 'none';&amp;#10;white = new util.Color([.9, .9, .9]);&amp;#10;green = new util.Color([(-.5), .5, (-.5)]);" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="document.documentElement.style.cursor = 'auto';" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="JSCode" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="setupCode" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Maximum number of targets is the length of these two arrays&amp;#10;# posArray1 contains the x coordinates and posArray2 the y coordinates&amp;#10;#posArray1 = [-0.05,-0.1,-0.15,-0.2,-0.25,-0.3,-0.35,-0.4,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4]&amp;#10;#posArray2 = [-0.05,-0.1,-0.15,-0.2,-0.25,-0.3,-0.35,-0.4,0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4]&amp;#10;alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'&amp;#10;fontColor = [.9 , .9, .9]&amp;#10;# Set up target text and circles&amp;#10;trialText = []&amp;#10;trialTargets = []&amp;#10;for Idx in range(25):&amp;#10;    trialText.append(visual.TextStim(win=win, &amp;#10;    name='trialText'+str(Idx),&amp;#10;    text=' ',&amp;#10;    font='Arial',&amp;#10;    pos=(0, 0), &amp;#10;    height=0.06, wrapWidth=None, ori=0, &amp;#10;    color=white))&amp;#10;    trialTargets.append(visual.Polygon(&amp;#10;    win=win,&amp;#10;    name=&quot;target&quot;,&amp;#10;    fillColor=white,&amp;#10;    lineColor=white,&amp;#10;    edges=36,&amp;#10;    pos=(0, 0), &amp;#10;    opacity = .25,&amp;#10;    size=.1&amp;#10;    ))&amp;#10;myClock = core.Clock()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="alphabet = &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;&amp;#10;fontColor = [0.9, 0.9, 0.9];&amp;#10;trialText = [];&amp;#10;trialTargets = [];&amp;#10;for (var Idx, _pj_c = 0, _pj_a = util.range(25), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    Idx = _pj_a[_pj_c];&amp;#10;    trialText.push(new visual.TextStim({&quot;win&quot;: psychoJS.window, &quot;name&quot;: (&quot;trialText&quot; + Idx.toString()), &quot;text&quot;: &quot; &quot;, &quot;font&quot;: &quot;Arial&quot;, &quot;pos&quot;: [0, 0], &quot;height&quot;: 0.06, &quot;wrapWidth&quot;: null, &quot;ori&quot;: 0, &quot;color&quot;: white}));&amp;#10;    trialTargets.push(new visual.Polygon({&quot;win&quot;: psychoJS.window, &quot;name&quot;: &quot;target&quot;, &quot;fillColor&quot;: white, &quot;lineColor&quot;: white, &quot;edges&quot;: 36, &quot;pos&quot;: [0, 0], &quot;opacity&quot;: 0.25, &quot;size&quot;: 0.1}));&amp;#10;}&amp;#10;myClock = new util.Clock();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="setupCode" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="instr">
      <RoutineSettingsComponent name="instr" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="instr" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_instr" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="msg = &quot;&quot;;&amp;#10;targetList = [];&amp;#10;for (var Idx, _pj_c = 0, _pj_a = util.range(Numbers), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    Idx = _pj_a[_pj_c];&amp;#10;    msg += ((Idx + 1).toString() + &quot;, &quot;);&amp;#10;    targetList.push((Idx + 1).toString());&amp;#10;    if (Letters) {&amp;#10;        msg += (alphabet[Idx] + &quot;, &quot;);&amp;#10;        targetList.push(alphabet[Idx]);&amp;#10;    }&amp;#10;}&amp;#10;msg = msg.slice(0, (- 2));&amp;#10;psychoJS.experiment.addData(&quot;Condition&quot;, Condition);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Customise the instructions with the current target list&amp;#10;msg = ''&amp;#10;targetList = []&amp;#10;for Idx in range(Numbers):&amp;#10;    msg += str(Idx+1) + ', '&amp;#10;    targetList.append(str(Idx+1))&amp;#10;    if Letters:&amp;#10;        msg += alphabet[Idx] + ', '&amp;#10;        targetList.append(alphabet[Idx])&amp;#10;msg = msg[:-2]&amp;#10;&amp;#10;thisExp.addData('Condition',Condition)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if clickHere.contains(mouse):&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (clickHere.contains(mouse)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_instr" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instrText" plugin="None">
        <Param val="$fontColor" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="code" updates="constant" name="letterHeight"/>
        <Param val="instrText" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0, 0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$'Connect the circles in order as quickly as possible.\nThe order is:\n' + msg + '.\n\nclick on the green circle to continue.'" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="mouse" plugin="None">
        <Param val="clickHere" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="valid click" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="never" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <PolygonComponent name="clickHere" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="lightgreen" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="lightgreen" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="clickHere" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="circle" valType="str" updates="None" name="shape"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="trial">
      <RoutineSettingsComponent name="trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="trialCode" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="trialCursor.pos = [0, 0];&amp;#10;console.log(&quot;len(targetList)&quot;, targetList.length);&amp;#10;for (var Idx, _pj_c = 0, _pj_a = util.range(targetList.length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    Idx = _pj_a[_pj_c];&amp;#10;    trialTargets[Idx].setPos([((posArray1[Idx] / 1000) - 0.5), (0.5 - (posArray2[Idx] / 1000))]);&amp;#10;    trialTargets[Idx].setAutoDraw(true);&amp;#10;    trialText[Idx].setPos([((posArray1[Idx] / 1000) - 0.5), (0.5 - (posArray2[Idx] / 1000))]);&amp;#10;    trialText[Idx].text = targetList[Idx];&amp;#10;    trialText[Idx].setColor(white);&amp;#10;    trialText[Idx].setAutoDraw(true);&amp;#10;}&amp;#10;trialStep = 0;&amp;#10;shapeList = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# The mouse position can't be set online&amp;#10;# trialMouse.pos = (1.5,1.5)&amp;#10;trialCursor.pos = (0,0)&amp;#10;&amp;#10;# Shuffle targetlocations&amp;#10;#shuffle(posArray1)&amp;#10;#shuffle(posArray2)&amp;#10;&amp;#10;# Set target&amp;#10;print('len(targetList)',len(targetList))&amp;#10;for Idx in range(len(targetList)):&amp;#10;    #trialTargets[Idx].setColor(white)&amp;#10;    #trialTargets[Idx].setOpacity(.25)&amp;#10;    trialTargets[Idx].setPos([posArray1[Idx]/1000-.5,.5-posArray2[Idx]/1000])&amp;#10;    trialTargets[Idx].setAutoDraw(True)&amp;#10;    trialText[Idx].setPos([posArray1[Idx]/1000-.5,.5-posArray2[Idx]/1000])&amp;#10;    trialText[Idx].text=targetList[Idx]&amp;#10;    trialText[Idx].setColor(white)&amp;#10;    trialText[Idx].setAutoDraw(True)&amp;#10;trialStep = 0&amp;#10;shapeList = []" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if myClock.getTime() &gt; 600:&amp;#10;    continueRoutine = False&amp;#10;    trials.finished = True&amp;#10;CursorTargetDistance = sqrt((trialCursor.pos[0]-trialTargets[trialStep].pos[0])**2 + (trialCursor.pos[1]-trialTargets[trialStep].pos[1])**2)&amp;#10;if (CursorTargetDistance &lt; .05):&amp;#10;    # trialTargets[trialStep].setOpacity(0)&amp;#10;    #trialTargets[trialStep].setColor(green)&amp;#10;    trialText[trialStep].setColor(green)&amp;#10;    #trialTargets[trialStep].setOpacity(.05)&amp;#10;    if trialStep &gt; 0:&amp;#10;        # Create new line&amp;#10;        shapeList.append(visual.ShapeStim(&amp;#10;        win=win, name=&quot;line&quot;+str(trialStep),&amp;#10;        lineColor=white,&amp;#10;        lineWidth=2,&amp;#10;        vertices=[[posArray1[trialStep-1]/1000-.5,.5-posArray2[trialStep-1]/1000],[posArray1[trialStep]/1000-.5,.5-posArray2[trialStep]/1000]],&amp;#10;        ))&amp;#10;        shapeList[-1].setAutoDraw(True)&amp;#10;    thisExp.addData('RTstep'+str(trialStep),round(t*1000))&amp;#10;    trialStep += 1&amp;#10;    # End routine when last target located&amp;#10;    if trialStep == len(targetList):&amp;#10;        continueRoutine = False&amp;#10;        thisExp.addData('Score',round(t))&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((myClock.getTime() &gt; 600)) {&amp;#10;    continueRoutine = false;&amp;#10;    trials.finished = true;&amp;#10;}&amp;#10;CursorTargetDistance = Math.sqrt((Math.pow((trialCursor.pos[0] - trialTargets[trialStep].pos[0]), 2) + Math.pow((trialCursor.pos[1] - trialTargets[trialStep].pos[1]), 2)));&amp;#10;if ((CursorTargetDistance &lt; 0.05)) {&amp;#10;    trialText[trialStep].setColor(green);&amp;#10;    if ((trialStep &gt; 0)) {&amp;#10;        shapeList.push(new visual.ShapeStim({&quot;win&quot;: psychoJS.window, &quot;name&quot;: (&quot;line&quot; + trialStep.toString()), &quot;lineColor&quot;: white, &quot;lineWidth&quot;: 2, &quot;vertices&quot;: [[((posArray1[(trialStep - 1)] / 1000) - 0.5), (0.5 - (posArray2[(trialStep - 1)] / 1000))], [((posArray1[trialStep] / 1000) - 0.5), (0.5 - (posArray2[trialStep] / 1000))]]}));&amp;#10;        shapeList.slice((- 1))[0].setAutoDraw(true);&amp;#10;    }&amp;#10;    psychoJS.experiment.addData((&quot;RTstep&quot; + trialStep.toString()), util.round((t * 1000)));&amp;#10;    trialStep += 1;&amp;#10;    if ((trialStep === targetList.length)) {&amp;#10;        continueRoutine = false;&amp;#10;        psychoJS.experiment.addData(&quot;Score&quot;, util.round(t));&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="for (var Idx, _pj_c = 0, _pj_a = util.range(targetList.length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    Idx = _pj_a[_pj_c];&amp;#10;    trialTargets[Idx].setAutoDraw(false);&amp;#10;    trialText[Idx].setAutoDraw(false);&amp;#10;}&amp;#10;for (var Idx, _pj_c = 0, _pj_a = util.range(shapeList.length), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;    Idx = _pj_a[_pj_c];&amp;#10;    shapeList[Idx].setAutoDraw(false);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Hide targets and lines ready for next trial&amp;#10;for Idx in range(len(targetList)):&amp;#10;    trialTargets[Idx].setAutoDraw(False)&amp;#10;    trialText[Idx].setAutoDraw(False)&amp;#10;for Idx in range(len(shapeList)):&amp;#10;    shapeList[Idx].setAutoDraw(False)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="trialCode" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MouseComponent name="trialMouse" plugin="None">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="" valType="list" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="trialMouse" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="final" valType="str" updates="None" name="saveMouseState"/>
        <Param val="" valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="routine" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <PolygonComponent name="trialCursor" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="1" valType="code" updates="constant" name="lineWidth"/>
        <Param val="180" valType="int" updates="constant" name="nVertices"/>
        <Param val="trialCursor" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(trialMouse.getPos()[0], trialMouse.getPos()[1])" valType="list" updates="set every frame" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="regular polygon..." valType="str" updates="constant" name="shape"/>
        <Param val="(0.025, 0.025)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
    </Routine>
    <Routine name="thanks">
      <RoutineSettingsComponent name="thanks" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="thanks" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="thx_text" plugin="None">
        <Param val="$fontColor" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val=".05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="thx_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Fin" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="setup"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'Condition': 'Sample A', 'Numbers': 8, 'Letters': 0, 'posArray1': [545, 630, 857, 725, 787, 209, 97, 390], 'posArray2': [369, 144, 279, 343, 524, 480, 255, 245]}, {'Condition': 'A', 'Numbers': 25, 'Letters': 0, 'posArray1': [621, 477, 713, 733, 458, 589, 408, 181, 235, 340, 456, 63, 137, 56, 54, 152, 329, 392, 639, 456, 525, 914, 946, 833, 800], 'posArray2': [720, 832, 836, 376, 489, 590, 655, 819, 912, 821, 939, 945, 526, 614, 119, 285, 58, 287, 209, 196, 57, 148, 912, 517, 939]}, {'Condition': 'Sample B', 'Numbers': 4, 'Letters': 1, 'posArray1': [543, 634, 857, 722, 785, 211, 102, 392], 'posArray2': [366, 145, 276, 340, 523, 479, 257, 222]}, {'Condition': 'B', 'Numbers': 12, 'Letters': 1, 'posArray1': [510, 702, 362, 458, 573, 702, 702, 848, 846, 781, 536, 301, 235, 152, 122, 264, 266, 621, 929, 876, 927, 72, 56, 170], 'posArray2': [440, 747, 718, 185, 305, 521, 139, 152, 582, 824, 798, 888, 446, 568, 60, 274, 126, 47, 58, 680, 912, 939, 492, 742]}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="conditions.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="instr"/>
    <Routine name="trial"/>
    <LoopTerminator name="trials"/>
    <Routine name="thanks"/>
  </Flow>
</PsychoPy2experiment>
